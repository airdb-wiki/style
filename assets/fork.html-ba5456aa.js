import{_ as e,p as a,q as t,a1 as i}from"./framework-5866ffd3.js";const r={},o=i(`<h1 id="github-技巧" tabindex="-1"><a class="header-anchor" href="#github-技巧" aria-hidden="true">#</a> Github 技巧</h1><h2 id="gitlab-或-github-fork-后如何同步源的新更新内容" tabindex="-1"><a class="header-anchor" href="#gitlab-或-github-fork-后如何同步源的新更新内容" aria-hidden="true">#</a> Gitlab 或 Github Fork 后如何同步源的新更新内容？</h2><h3 id="给-fork-配置远程库" tabindex="-1"><a class="header-anchor" href="#给-fork-配置远程库" aria-hidden="true">#</a> 给 fork 配置远程库</h3><ul><li><p>查看远程状态 <code>git remote -v</code></p></li><li><p>确定一个将被同步给 fork 远程的上游仓库 <code>git remote add upstream https://github.com/bfenetworks/bfe</code></p></li><li><p>再次查看状态确认是否配置成功。 <code>git remote -v</code></p></li></ul><h3 id="同步-fork" tabindex="-1"><a class="header-anchor" href="#同步-fork" aria-hidden="true">#</a> 同步 fork</h3><ul><li>从上游仓库 fetch 分支和提交点，提交给本地 master，并会被存储在一个本地分支 upstream/master</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git fetch upstream
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>切换到本地主分支(如果不在的话)</li></ul><p><code>git checkout develop</code></p><ul><li>把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。</li></ul><p><code>git merge upstream/develop</code></p><ul><li>如果想更新到 GitHub 的 fork 上，直接</li></ul><p><code>git push origin develop</code></p>`,13),d=[o];function l(s,c){return a(),t("div",null,d)}const n=e(r,[["render",l],["__file","fork.html.vue"]]);export{n as default};
